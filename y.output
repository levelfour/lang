Terminals which are not used

   MOD


Grammar

    0 $accept: statements $end

    1 statements: statement
    2           | statements statement

    3 statement: expression CR

    4 expression: INTEGER_LITERAL
    5           | DOUBLE_LITERAL
    6           | LPAREN expression RPAREN
    7           | expression ADD expression
    8           | expression SUB expression
    9           | expression MUL expression
   10           | expression DIV expression


Terminals, with rules where they appear

$end (0) 0
error (256)
INTEGER_LITERAL (258) 4
DOUBLE_LITERAL (259) 5
LPAREN (260) 6
RPAREN (261) 6
SUB (262) 8
ADD (263) 7
MOD (264)
DIV (265) 10
MUL (266) 9
CR (267) 3


Nonterminals, with rules where they appear

$accept (13)
    on left: 0
statements (14)
    on left: 1 2, on right: 0 2
statement (15)
    on left: 3, on right: 1 2
expression (16)
    on left: 4 5 6 7 8 9 10, on right: 3 6 7 8 9 10


state 0

    0 $accept: . statements $end

    INTEGER_LITERAL  shift, and go to state 1
    DOUBLE_LITERAL   shift, and go to state 2
    LPAREN           shift, and go to state 3

    statements  go to state 4
    statement   go to state 5
    expression  go to state 6


state 1

    4 expression: INTEGER_LITERAL .

    $default  reduce using rule 4 (expression)


state 2

    5 expression: DOUBLE_LITERAL .

    $default  reduce using rule 5 (expression)


state 3

    6 expression: LPAREN . expression RPAREN

    INTEGER_LITERAL  shift, and go to state 1
    DOUBLE_LITERAL   shift, and go to state 2
    LPAREN           shift, and go to state 3

    expression  go to state 7


state 4

    0 $accept: statements . $end
    2 statements: statements . statement

    $end             shift, and go to state 8
    INTEGER_LITERAL  shift, and go to state 1
    DOUBLE_LITERAL   shift, and go to state 2
    LPAREN           shift, and go to state 3

    statement   go to state 9
    expression  go to state 6


state 5

    1 statements: statement .

    $default  reduce using rule 1 (statements)


state 6

    3 statement: expression . CR
    7 expression: expression . ADD expression
    8           | expression . SUB expression
    9           | expression . MUL expression
   10           | expression . DIV expression

    SUB  shift, and go to state 10
    ADD  shift, and go to state 11
    DIV  shift, and go to state 12
    MUL  shift, and go to state 13
    CR   shift, and go to state 14


state 7

    6 expression: LPAREN expression . RPAREN
    7           | expression . ADD expression
    8           | expression . SUB expression
    9           | expression . MUL expression
   10           | expression . DIV expression

    RPAREN  shift, and go to state 15
    SUB     shift, and go to state 10
    ADD     shift, and go to state 11
    DIV     shift, and go to state 12
    MUL     shift, and go to state 13


state 8

    0 $accept: statements $end .

    $default  accept


state 9

    2 statements: statements statement .

    $default  reduce using rule 2 (statements)


state 10

    8 expression: expression SUB . expression

    INTEGER_LITERAL  shift, and go to state 1
    DOUBLE_LITERAL   shift, and go to state 2
    LPAREN           shift, and go to state 3

    expression  go to state 16


state 11

    7 expression: expression ADD . expression

    INTEGER_LITERAL  shift, and go to state 1
    DOUBLE_LITERAL   shift, and go to state 2
    LPAREN           shift, and go to state 3

    expression  go to state 17


state 12

   10 expression: expression DIV . expression

    INTEGER_LITERAL  shift, and go to state 1
    DOUBLE_LITERAL   shift, and go to state 2
    LPAREN           shift, and go to state 3

    expression  go to state 18


state 13

    9 expression: expression MUL . expression

    INTEGER_LITERAL  shift, and go to state 1
    DOUBLE_LITERAL   shift, and go to state 2
    LPAREN           shift, and go to state 3

    expression  go to state 19


state 14

    3 statement: expression CR .

    $default  reduce using rule 3 (statement)


state 15

    6 expression: LPAREN expression RPAREN .

    $default  reduce using rule 6 (expression)


state 16

    7 expression: expression . ADD expression
    8           | expression . SUB expression
    8           | expression SUB expression .
    9           | expression . MUL expression
   10           | expression . DIV expression

    DIV  shift, and go to state 12
    MUL  shift, and go to state 13

    $default  reduce using rule 8 (expression)


state 17

    7 expression: expression . ADD expression
    7           | expression ADD expression .
    8           | expression . SUB expression
    9           | expression . MUL expression
   10           | expression . DIV expression

    DIV  shift, and go to state 12
    MUL  shift, and go to state 13

    $default  reduce using rule 7 (expression)


state 18

    7 expression: expression . ADD expression
    8           | expression . SUB expression
    9           | expression . MUL expression
   10           | expression . DIV expression
   10           | expression DIV expression .

    $default  reduce using rule 10 (expression)


state 19

    7 expression: expression . ADD expression
    8           | expression . SUB expression
    9           | expression . MUL expression
    9           | expression MUL expression .
   10           | expression . DIV expression

    $default  reduce using rule 9 (expression)
